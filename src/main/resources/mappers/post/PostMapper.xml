<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.comeandcommue.post_query_service.domain.PostQueryRepository">

    <select id="findRecentPosts"
            parameterType="map"
            resultType="io.comeandcommue.post_query_service.domain.dto.PostDto">
        SELECT
        p.id,
        p.post_no,
        p.title,
        p.category_name,
        p.link_href,
        p.thumbnail_src,
        p.author_name,
        p.comment_count,
        p.like_count,
        p.hit_count,
        p.community_type,

        <!-- 로그인 상태면 exists로 계산, 아니면 false 고정 -->
        <choose>
            <when test="userId != null">
                EXISTS (
                SELECT 1
                FROM post_like pl
                WHERE pl.post_id = p.id
                AND pl.user_id = #{userId}
                ) AS liked,
            </when>
            <otherwise>
                false AS liked,
            </otherwise>
        </choose>

        p.posted_at,
        p.created_at
        FROM post p

        <where>
            1 = 1

            <!-- communityType List 필터 -->
            <if test="communityTypes != null and communityTypes.size > 0">
                AND p.community_type IN
                <foreach item="type" collection="communityTypes" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>

            <!-- Cursor 조건 -->
            <if test="lastCreatedAt != null">
                AND p.created_at &lt; #{lastCreatedAt}
            </if>
        </where>

        ORDER BY p.created_at DESC
        LIMIT #{pageSize}
    </select>

    <select id="findById"
            resultType="io.comeandcommue.post_query_service.domain.dto.PostDto">
        SELECT
            p.id,
            p.post_no,
            p.title,
            p.category_name,
            p.link_href,
            p.thumbnail_src,
            p.author_name,
            p.comment_count,
            p.like_count,
            p.hit_count,
            p.community_type,
        <choose>
            <when test="userId != null">
                EXISTS (
                SELECT 1
                FROM post_like pl
                WHERE pl.post_id = p.id
                AND pl.user_id = #{userId}
                ) AS liked,
            </when>
            <otherwise>
                false AS liked,
            </otherwise>
        </choose>
        p.posted_at,
        p.created_at
        FROM post p
        <where>
            p.id = #{postId}
        </where>
    </select>

    <select id="countNewPosts"
            parameterType="map"
            resultType="io.comeandcommue.post_query_service.domain.dto.PostDto">
        SELECT
            COUNT(1)
        FROM post p
        <where>
            1 = 1
            <!-- communityType List 필터 -->
            <if test="communityTypes != null and communityTypes.size > 0">
                AND p.community_type IN
                <foreach item="type" collection="communityTypes" open="(" separator="," close=")">
                    #{type}
                </foreach>
            </if>
            <!-- Cursor 조건 -->
            <if test="lastCreatedAt != null">
                AND p.created_at &lt; #{lastCreatedAt}
            </if>
        </where>
    </select>
</mapper>
